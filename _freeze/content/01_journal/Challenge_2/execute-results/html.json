{
  "hash": "d5b76c4e951b5ad7a8aaedc9591b133e",
  "result": {
    "markdown": "---\ntitle: \"Challenge 2 - Supervised ML - Regeression\"\nauthor: \"Felix Adamaszek\"\n---\n\n\n# Loading the libraries used for different purposes\n\n\n::: {.cell hash='Challenge_2_cache/html/unnamed-chunk-1_b95314b9e2c6eead749fe3e11d558f37'}\n\n```{.r .cell-code}\n# For standard use\n    library(tidyverse)\n\n# For modeling\n    library(parsnip)\n\n# For preprocessing & sampling\n    library(recipes)\n    library(rsample)\n    library(workflows)\n\n# For modeling error metrics\n    library(yardstick)\n\n# Visualization of decision trees\n    library(rpart.plot)\n```\n:::\n\n\n# Preparing the needed data\n\n\n::: {.cell hash='Challenge_2_cache/html/unnamed-chunk-2_9d8c8e1c5eb2ee150e77b8deeccf84d8'}\n\n```{.r .cell-code}\n  bike_orderlines <- read_rds(\"/Users/felixadamaszek/Documents/GitHub/ss23-bdml-FelixAdams1827/ss23-bdml-FelixAdams1827/content/01_journal/FUNDAMENTAL_DOWNLOADS/bike_orderlines.rds\")\n    \n  neededdata <- bike_orderlines %>% \n\n#Selecting the needed columns\n    \n  select(model, model_year, category_1, category_2, category_3, price, frame_material) %>% \n\n#Removing duplicates and preparing the rows\n    \n  distinct() %>% \n  na.omit() %>% \n  mutate_if(is.character, as.factor)\n  \n  glimpse(neededdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> Rows: 230\n#> Columns: 7\n#> $ model          <fct> Spectral CF 7 WMN, Ultimate CF SLX Disc 8.0 ETAP, Neuro…\n#> $ model_year     <dbl> 2021, 2020, 2021, 2019, 2020, 2020, 2020, 2021, 2020, 2…\n#> $ category_1     <fct> Mountain, Road, Mountain, Road, Mountain, Hybrid / City…\n#> $ category_2     <fct> Trail, Race, Trail, Triathlon Bike, Dirt Jump, City, Tr…\n#> $ category_3     <fct> Spectral, Ultimate, Neuron, Speedmax, Stitched, Roadlit…\n#> $ price          <dbl> 3119, 5359, 2729, 1749, 1219, 1359, 2529, 1559, 3899, 6…\n#> $ frame_material <fct> carbon, carbon, carbon, carbon, aluminium, carbon, carb…\n```\n:::\n:::\n\n\n# Splitting the data\n\n\n::: {.cell hash='Challenge_2_cache/html/unnamed-chunk-3_4a2e543ca04802a40eae990be306fd84'}\n\n```{.r .cell-code}\n  set.seed(123)\n  \n  splitted_data <- initial_split(neededdata, prop = 3/4)\n  \n  training_data <- training(splitted_data)\n  testing_data <- testing(splitted_data)\n```\n:::\n\n\n# Using the recipes package\n\n\n::: {.cell hash='Challenge_2_cache/html/unnamed-chunk-4_1bbcd3f1c46653c68b54e39ce38bf715'}\n\n```{.r .cell-code}\n  bikes_recipe <- recipe(price ~ ., data = training_data) %>% \n\n#Adding roles\n  update_role(model, new_role = \"ID\") %>% \n  \n#Adding dummy variables\n  \n  step_dummy(all_nominal(), -all_outcomes()) %>% \n  step_zv(all_predictors())\n```\n:::\n\n\n# Create Model\n\n\n::: {.cell hash='Challenge_2_cache/html/unnamed-chunk-5_d2a7cd4a37509a3106e2d73735938d58'}\n\n```{.r .cell-code}\n  lr_mod <-\n  linear_reg() %>% \n  set_engine(\"glm\") \n```\n:::\n\n\n# Bundle the model and recipe with workflow package\n\n\n::: {.cell hash='Challenge_2_cache/html/unnamed-chunk-6_373ce0862f10f5f8bf200464a3fd0b7b'}\n\n```{.r .cell-code}\n  bikes_workflow <- workflow() %>% \n    add_model(lr_mod) %>% \n    add_recipe(bikes_recipe)\n  bikes_workflow\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> ══ Workflow ════════════════════════════════════════════════════════════════════\n#> Preprocessor: Recipe\n#> Model: linear_reg()\n#> \n#> ── Preprocessor ────────────────────────────────────────────────────────────────\n#> 2 Recipe Steps\n#> \n#> • step_dummy()\n#> • step_zv()\n#> \n#> ── Model ───────────────────────────────────────────────────────────────────────\n#> Linear Regression Model Specification (regression)\n#> \n#> Computational engine: glm\n```\n:::\n:::\n\n\n# Evaluating the model with the yardstick package \n\n\n::: {.cell hash='Challenge_2_cache/html/unnamed-chunk-7_7a9bb5cb22a06b982d1e5d46c42b386b'}\n\n```{.r .cell-code}\n#Fit Model\n\n  bikes_fit <- bikes_workflow %>% \n  fit(data = training_data)\n\n#Prediction\n\n  bikes_prediction <- predict(bikes_fit, testing_data) %>% \n  bind_cols(testing_data %>% select(price, model))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in predict.lm(object, newdata, se.fit, scale = 1, type = if (type == :\n#> prediction from a rank-deficient fit may be misleading\n```\n:::\n\n```{.r .cell-code}\n  bikes_prediction %>% \n  metrics(truth = price, estimate = .pred)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\".metric\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimator\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimate\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"rmse\",\"2\":\"standard\",\"3\":\"1.970556e+03\"},{\"1\":\"rsq\",\"2\":\"standard\",\"3\":\"6.245344e-02\"},{\"1\":\"mae\",\"2\":\"standard\",\"3\":\"1.442931e+03\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}