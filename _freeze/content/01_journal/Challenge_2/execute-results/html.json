{
  "hash": "6427f27dbb4bf17e4e027f4386796fef",
  "result": {
    "markdown": "---\ntitle: \"Challenge 2 - Supervised ML - Regeression\"\nauthor: \"Felix Adamaszek\"\n---\n\n\n# Loading the libraries used for different purposes\n\n\n::: {.cell hash='Challenge_2_cache/html/unnamed-chunk-1_58890e8b27c1c91ee89ddc113a650ef5'}\n\n```{.r .cell-code}\n# For standard use\n  library(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\n# For modeling\n  library(parsnip)\n\n# For preprocessing & sampling\n  library(recipes)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'recipes'\n#> \n#> The following object is masked from 'package:stringr':\n#> \n#>     fixed\n#> \n#> The following object is masked from 'package:stats':\n#> \n#>     step\n```\n:::\n\n```{.r .cell-code}\n  library(rsample)\n  library(workflows)\n\n# For modeling error metrics\n  library(yardstick)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'yardstick'\n#> \n#> The following object is masked from 'package:readr':\n#> \n#>     spec\n```\n:::\n\n```{.r .cell-code}\n# Visualization of decision trees\n  library(rpart.plot)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Loading required package: rpart\n```\n:::\n:::\n\n\n# Preparing the needed data\n\n\n::: {.cell hash='Challenge_2_cache/html/unnamed-chunk-2_d3a4b29d7da23c71bfe688895500feb5'}\n\n```{.r .cell-code}\n  bike_orderlines <- read_rds(\"/Users/felixadamaszek/Documents/GitHub/ss23-bdml-FelixAdams1827/ss23-bdml-FelixAdams1827/content/01_journal/FUNDAMENTAL_DOWNLOADS/bike_orderlines.rds\")\n\n  needdata <- bike_orderlines %>% \n\n#Selecting the needed columns\n    \n  select(model, model_year, category_1, category_2, category_3, price, frame_material) %>% \n\n#Removing duplicates and preparing the rows\n    \n  distinct() %>% \n  na.omit() %>% \n  mutate_if(is.character, as.factor)\n\n  glimpse(needdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> Rows: 230\n#> Columns: 7\n#> $ model          <fct> Spectral CF 7 WMN, Ultimate CF SLX Disc 8.0 ETAP, Neuro…\n#> $ model_year     <dbl> 2021, 2020, 2021, 2019, 2020, 2020, 2020, 2021, 2020, 2…\n#> $ category_1     <fct> Mountain, Road, Mountain, Road, Mountain, Hybrid / City…\n#> $ category_2     <fct> Trail, Race, Trail, Triathlon Bike, Dirt Jump, City, Tr…\n#> $ category_3     <fct> Spectral, Ultimate, Neuron, Speedmax, Stitched, Roadlit…\n#> $ price          <dbl> 3119, 5359, 2729, 1749, 1219, 1359, 2529, 1559, 3899, 6…\n#> $ frame_material <fct> carbon, carbon, carbon, carbon, aluminium, carbon, carb…\n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}