{
  "hash": "055f77d7e1ee415e41d8d81446458f33",
  "result": {
    "markdown": "---\ntitle: \"Automated Machine Learning with H20 (II)\"\nauthor: \"Felix Adamaszek\"\n---\n\n\n# Loading required libraries\n\n\n::: {.cell hash='Challenge_4_cache/html/unnamed-chunk-1_7d6513e9c59b3a2361cec285237e649b'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(h2o)\nlibrary(rsample)\nlibrary(recipes)\nlibrary(cowplot)\nlibrary(glue)\n```\n:::\n\n\n# Loading required data \n\n\n::: {.cell hash='Challenge_4_cache/html/unnamed-chunk-2_b7c8835636817d4340d33a7e0f9026b4'}\n\n```{.r .cell-code}\n    product_backorders <- read_csv(\"/Users/felixadamaszek/Documents/GitHub/ss23-bdml-FelixAdams1827/ss23-bdml-FelixAdams1827/content/01_journal/H2O Data/product_backorders.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 19053 Columns: 23\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (7): potential_issue, deck_risk, oe_constraint, ppap_risk, stop_auto_bu...\n#> dbl (16): sku, national_inv, lead_time, in_transit_qty, forecast_3_month, fo...\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n# Splitting the data to training and test\n\n\n::: {.cell hash='Challenge_4_cache/html/unnamed-chunk-3_bed0924eb7babd09e80388977c060303'}\n\n```{.r .cell-code}\nset.seed(123)\nsplit_obj <- initial_split(product_backorders, prop = 0.85)\ntrain_readable_tbl <- training(split_obj)\ntest_readable_tbl <- testing(split_obj)\n\nproduct_rec <- recipe(went_on_backorder ~ ., data = train_readable_tbl) %>% \n  step_dummy(all_nominal(), -all_outcomes()) %>% \n  step_zv(all_predictors()) %>% \n  prep()\n\ntrain_data <- bake(product_rec, new_data = train_readable_tbl)\ntest_data <- bake(product_rec, new_data = test_readable_tbl)\n```\n:::\n\n\n# Response and predictor variables\n\n\n::: {.cell hash='Challenge_4_cache/html/unnamed-chunk-4_3422152836549ca743b5a9f0f993860f'}\n\n```{.r .cell-code}\nh2o.init()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> H2O is not running yet, starting it now...\n#> \n#> Note:  In case of errors look at the following log files:\n#>     /var/folders/yt/4dmpr0q9337dgmwl36yx05k00000gn/T//RtmpikxUzj/file22fe26420fd5/h2o_felixadamaszek_started_from_r.out\n#>     /var/folders/yt/4dmpr0q9337dgmwl36yx05k00000gn/T//RtmpikxUzj/file22fe3b1d7c92/h2o_felixadamaszek_started_from_r.err\n#> \n#> \n#> Starting H2O JVM and connecting: ..... Connection successful!\n#> \n#> R is connected to the H2O cluster: \n#>     H2O cluster uptime:         3 seconds 786 milliseconds \n#>     H2O cluster timezone:       Europe/Berlin \n#>     H2O data parsing timezone:  UTC \n#>     H2O cluster version:        3.40.0.4 \n#>     H2O cluster version age:    1 month and 8 days \n#>     H2O cluster name:           H2O_started_from_R_felixadamaszek_adl455 \n#>     H2O cluster total nodes:    1 \n#>     H2O cluster total memory:   1.77 GB \n#>     H2O cluster total cores:    4 \n#>     H2O cluster allowed cores:  4 \n#>     H2O cluster healthy:        TRUE \n#>     H2O Connection ip:          localhost \n#>     H2O Connection port:        54321 \n#>     H2O Connection proxy:       NA \n#>     H2O Internal Security:      FALSE \n#>     R Version:                  R version 4.2.3 (2023-03-15)\n```\n:::\n\n```{.r .cell-code}\nsplit_h2o <- h2o.splitFrame(as.h2o(train_data), ratios = c(0.85), seed = 1234)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n\n```{.r .cell-code}\ntrain_h2o <- split_h2o[[1]]\nvalid_h2o <- split_h2o[[2]]\ntest_h2o  <- as.h2o(test_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n\n```{.r .cell-code}\ny <- \"went_on_backorder\"\nx <- setdiff(names(train_h2o),y)\n```\n:::\n\n\n\n# Running AutoML\n\n\n::: {.cell hash='Challenge_4_cache/html/unnamed-chunk-5_625eb25b5c514e61e65603e785d06613'}\n\n```{.r .cell-code}\n# AB HIER NOCHMAL PRÜFEN \n# automl_models_h2o <- h2o.automl(\n#   x = x,\n #  y = y,\n  # training_frame    = train_h2o,\n   #validation_frame  = valid_h2o,\n   #leaderboard_frame = test_h2o,\n   #max_runtime_secs  = 30,\n   #nfolds            = 5 \n #)\n```\n:::\n\n\n# Leaderboard and leadermodel\n\n\n::: {.cell hash='Challenge_4_cache/html/unnamed-chunk-6_4fa6ac73e71852d602424202dccffbdf'}\n\n```{.r .cell-code}\n# automl_models_h2o@leaderboard\n\n# predictions <- h2o.predict(automl_models_h2o@leader, newdata = as.h2o((test_data)))\n# predictions_tbl <- predictions %>% \n  # as_tibble()\n# predictions_tbl\n# automl_models_h2o@leader\n# h2o.getModel(\"StackedEnsemble_AllModels_2_AutoML_5_20230510_181759\") %>% \n\n# h2o.saveModel(path = \"/Users/felixadamaszek/Documents/GitHub/ss23-bdml-FelixAdams1827/ss23-bdml-FelixAdams1827/content/01_journal/Challenge_4_files\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}