{
  "hash": "fb39505a732dd75ad0fb602819761cda",
  "result": {
    "markdown": "---\ntitle: \"Automated Machine Learning with H20 (II)\"\nauthor: \"Felix Adamaszek\"\n---\n\n\n# Steps for this challenge\n\n\n::: {.cell hash='Challenge_4_cache/html/unnamed-chunk-1_46e7eb308e239a80056245dd002164c9'}\n\n```{.r .cell-code}\n# 1. Load the training & test dataset\n# 2. Specifiy the response and predictor variables\n# 3. run AutoML specifying the stopping criterion\n# 4. View the leaderboard\n# 5. Predicting using Leader Model\n# 6. Save the leader model\n```\n:::\n\n\n# Loading required libraries\n\n\n::: {.cell hash='Challenge_4_cache/html/unnamed-chunk-2_158050e9a29a9cfd482378c80dc2cfeb'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(h2o)\nlibrary(rsample)\nlibrary(recipes)\nlibrary(cowplot)\nlibrary(glue)\n```\n:::\n\n\n# Loading required data \n\n\n::: {.cell hash='Challenge_4_cache/html/unnamed-chunk-3_289f813937c90a0db9ee70db76bf5230'}\n\n```{.r .cell-code}\n    product_backorders <- read_csv(\"/Users/felixadamaszek/Documents/GitHub/ss23-bdml-FelixAdams1827/ss23-bdml-FelixAdams1827/content/01_journal/H2O Data/product_backorders.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 19053 Columns: 23\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (7): potential_issue, deck_risk, oe_constraint, ppap_risk, stop_auto_bu...\n#> dbl (16): sku, national_inv, lead_time, in_transit_qty, forecast_3_month, fo...\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n# Splitting the data to training and test\n\n\n::: {.cell hash='Challenge_4_cache/html/unnamed-chunk-4_af0e14d1b212855d990242c2bdf240e5'}\n\n```{.r .cell-code}\nset.seed(1234)\nsplit_obj <- initial_split(product_backorders, prop = 0.85)\ntrain_readable_tbl <- training(split_obj)\ntest_readable_tbl <- testing(split_obj)\n\nproduct_rec <- recipe(went_on_backorder ~ ., data = train_readable_tbl) %>% \n  step_dummy(all_nominal(), -all_outcomes()) %>% \n  step_zv(all_predictors()) %>% \n  prep()\n\ntrain_data <- bake(product_rec, new_data = train_readable_tbl)\ntest_data <- bake(product_rec, new_data = test_readable_tbl)\n```\n:::\n\n\n# Response and predictor variables\n\n\n::: {.cell hash='Challenge_4_cache/html/unnamed-chunk-5_f9b8848c3f116de1db4cc396098806f1'}\n\n```{.r .cell-code}\nh2o.init()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  Connection successful!\n#> \n#> R is connected to the H2O cluster: \n#>     H2O cluster uptime:         18 hours 3 minutes \n#>     H2O cluster timezone:       Europe/Berlin \n#>     H2O data parsing timezone:  UTC \n#>     H2O cluster version:        3.40.0.4 \n#>     H2O cluster version age:    1 month and 9 days \n#>     H2O cluster name:           H2O_started_from_R_felixadamaszek_adl455 \n#>     H2O cluster total nodes:    1 \n#>     H2O cluster total memory:   1.59 GB \n#>     H2O cluster total cores:    4 \n#>     H2O cluster allowed cores:  4 \n#>     H2O cluster healthy:        TRUE \n#>     H2O Connection ip:          localhost \n#>     H2O Connection port:        54321 \n#>     H2O Connection proxy:       NA \n#>     H2O Internal Security:      FALSE \n#>     R Version:                  R version 4.2.3 (2023-03-15)\n```\n:::\n\n```{.r .cell-code}\nsplit_h2o <- h2o.splitFrame(as.h2o(train_data), ratios = c(0.85), seed = 1234)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n\n```{.r .cell-code}\ntrain_h2o <- split_h2o[[1]]\nvalid_h2o <- split_h2o[[2]]\ntest_h2o  <- as.h2o(test_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n\n```{.r .cell-code}\ny <- \"went_on_backorder\"\nx <- setdiff(names(train_h2o),y)\n```\n:::\n\n\n\n# Running AutoML\n\n\n::: {.cell hash='Challenge_4_cache/html/unnamed-chunk-6_59b001d87e0935bb96351331d4dd4aea'}\n\n```{.r .cell-code}\nautoml_models_h2o <- h2o.automl(\n   x = x,\n   y = y,\n   training_frame    = train_h2o,\n   validation_frame  = valid_h2o,\n   leaderboard_frame = test_h2o,\n   max_runtime_secs  = 30,\n   nfolds            = 5 \n )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |==                                                                    |   3%\n#> 14:18:44.231: User specified a validation frame with cross-validation still enabled. Please note that the models will still be validated using cross-validation only, the validation frame will be used to provide purely informative validation metrics on the trained models.\n  |                                                                            \n  |=======                                                               |  10%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |=====================                                                 |  31%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |====================================                                  |  51%\n  |                                                                            \n  |========================================                              |  58%\n  |                                                                            \n  |=============================================                         |  65%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |=======================================================               |  78%\n  |                                                                            \n  |===========================================================           |  85%\n  |                                                                            \n  |================================================================      |  92%\n  |                                                                            \n  |===================================================================== |  98%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n:::\n\n\n# Leaderboard and leadermodel\n\n\n::: {.cell hash='Challenge_4_cache/html/unnamed-chunk-7_11c0da57b68ef28cc23db9dd1d0cddb3'}\n\n```{.r .cell-code}\ntypeof(automl_models_h2o)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"S4\"\n```\n:::\n\n```{.r .cell-code}\nslotNames(automl_models_h2o)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"project_name\"   \"leader\"         \"leaderboard\"    \"event_log\"     \n#> [5] \"modeling_steps\" \"training_info\"\n```\n:::\n\n```{.r .cell-code}\nautoml_models_h2o@leaderboard\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>                                                  model_id       auc   logloss\n#> 1 StackedEnsemble_BestOfFamily_2_AutoML_2_20230606_141844 0.9527393 0.1733521\n#> 2 StackedEnsemble_BestOfFamily_1_AutoML_2_20230606_141844 0.9524164 0.1736103\n#> 3                      XGBoost_1_AutoML_2_20230606_141844 0.9485036 0.1804360\n#> 4                          GBM_1_AutoML_2_20230606_141844 0.9484397 0.1837795\n#> 5                      XGBoost_2_AutoML_2_20230606_141844 0.9393281 0.2191810\n#> 6                          GBM_4_AutoML_2_20230606_141844 0.9030596 0.3000969\n#>       aucpr mean_per_class_error      rmse        mse\n#> 1 0.7553282            0.1497764 0.2288331 0.05236458\n#> 2 0.7543424            0.1534461 0.2289184 0.05240364\n#> 3 0.7389788            0.1455271 0.2322649 0.05394698\n#> 4 0.7385847            0.1601098 0.2358665 0.05563301\n#> 5 0.7265648            0.1690076 0.2419052 0.05851811\n#> 6 0.6108258            0.1913555 0.2969982 0.08820794\n#> \n#> [10 rows x 7 columns]\n```\n:::\n\n```{.r .cell-code}\nautoml_models_h2o@leader\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> Model Details:\n#> ==============\n#> \n#> H2OBinomialModel: stackedensemble\n#> Model ID:  StackedEnsemble_BestOfFamily_2_AutoML_2_20230606_141844 \n#> Model Summary for Stacked Ensemble: \n#>                                     key            value\n#> 1                     Stacking strategy cross_validation\n#> 2  Number of base models (used / total)              4/4\n#> 3      # GBM base models (used / total)              1/1\n#> 4  # XGBoost base models (used / total)              1/1\n#> 5      # DRF base models (used / total)              1/1\n#> 6      # GLM base models (used / total)              1/1\n#> 7                 Metalearner algorithm              GLM\n#> 8    Metalearner fold assignment scheme           Random\n#> 9                    Metalearner nfolds                5\n#> 10              Metalearner fold_column               NA\n#> 11   Custom metalearner hyperparameters             None\n#> \n#> \n#> H2OBinomialMetrics: stackedensemble\n#> ** Reported on training data. **\n#> \n#> MSE:  0.03371848\n#> RMSE:  0.1836259\n#> LogLoss:  0.1193677\n#> Mean Per-Class Error:  0.09899042\n#> AUC:  0.9798214\n#> AUCPR:  0.8915564\n#> Gini:  0.9596428\n#> \n#> Confusion Matrix (vertical: actual; across: predicted) for F1-optimal threshold:\n#>          No  Yes    Error       Rate\n#> No     8545  232 0.026433  =232/8777\n#> Yes     205  990 0.171548  =205/1195\n#> Totals 8750 1222 0.043823  =437/9972\n#> \n#> Maximum Metrics: Maximum metrics at their respective thresholds\n#>                         metric threshold       value idx\n#> 1                       max f1  0.397876    0.819197 181\n#> 2                       max f2  0.233428    0.858491 231\n#> 3                 max f0point5  0.578893    0.843895 130\n#> 4                 max accuracy  0.493223    0.957280 155\n#> 5                max precision  0.980361    1.000000   0\n#> 6                   max recall  0.010346    1.000000 371\n#> 7              max specificity  0.980361    1.000000   0\n#> 8             max absolute_mcc  0.397876    0.794332 181\n#> 9   max min_per_class_accuracy  0.179875    0.927310 252\n#> 10 max mean_per_class_accuracy  0.225628    0.929334 234\n#> 11                     max tns  0.980361 8777.000000   0\n#> 12                     max fns  0.980361 1191.000000   0\n#> 13                     max fps  0.000735 8777.000000 399\n#> 14                     max tps  0.010346 1195.000000 371\n#> 15                     max tnr  0.980361    1.000000   0\n#> 16                     max fnr  0.980361    0.996653   0\n#> 17                     max fpr  0.000735    1.000000 399\n#> 18                     max tpr  0.010346    1.000000 371\n#> \n#> Gains/Lift Table: Extract with `h2o.gainsLift(<model>, <data>)` or `h2o.gainsLift(<model>, valid=<T/F>, xval=<T/F>)`\n#> H2OBinomialMetrics: stackedensemble\n#> ** Reported on validation data. **\n#> \n#> MSE:  0.04474767\n#> RMSE:  0.2115364\n#> LogLoss:  0.1510496\n#> Mean Per-Class Error:  0.1342284\n#> AUC:  0.9589127\n#> AUCPR:  0.7773943\n#> Gini:  0.9178254\n#> \n#> Confusion Matrix (vertical: actual; across: predicted) for F1-optimal threshold:\n#>          No Yes    Error       Rate\n#> No     2026 103 0.048380  =103/2129\n#> Yes      57 202 0.220077    =57/259\n#> Totals 2083 305 0.067002  =160/2388\n#> \n#> Maximum Metrics: Maximum metrics at their respective thresholds\n#>                         metric threshold       value idx\n#> 1                       max f1  0.349697    0.716312 176\n#> 2                       max f2  0.202734    0.781359 223\n#> 3                 max f0point5  0.656637    0.743455  96\n#> 4                 max accuracy  0.508223    0.939280 128\n#> 5                max precision  0.970273    1.000000   0\n#> 6                   max recall  0.006515    1.000000 378\n#> 7              max specificity  0.970273    1.000000   0\n#> 8             max absolute_mcc  0.311023    0.682403 186\n#> 9   max min_per_class_accuracy  0.152082    0.895753 247\n#> 10 max mean_per_class_accuracy  0.116897    0.902780 266\n#> 11                     max tns  0.970273 2129.000000   0\n#> 12                     max fns  0.970273  258.000000   0\n#> 13                     max fps  0.000553 2129.000000 399\n#> 14                     max tps  0.006515  259.000000 378\n#> 15                     max tnr  0.970273    1.000000   0\n#> 16                     max fnr  0.970273    0.996139   0\n#> 17                     max fpr  0.000553    1.000000 399\n#> 18                     max tpr  0.006515    1.000000 378\n#> \n#> Gains/Lift Table: Extract with `h2o.gainsLift(<model>, <data>)` or `h2o.gainsLift(<model>, valid=<T/F>, xval=<T/F>)`\n#> H2OBinomialMetrics: stackedensemble\n#> ** Reported on cross-validation data. **\n#> ** 5-fold cross-validation on training data (Metrics computed for combined holdout predictions) **\n#> \n#> MSE:  0.05118106\n#> RMSE:  0.2262323\n#> LogLoss:  0.1727723\n#> Mean Per-Class Error:  0.1520616\n#> AUC:  0.9490955\n#> AUCPR:  0.7460987\n#> Gini:  0.898191\n#> \n#> Confusion Matrix (vertical: actual; across: predicted) for F1-optimal threshold:\n#>           No  Yes    Error         Rate\n#> No     11543  610 0.050193   =610/12153\n#> Yes      420 1234 0.253930    =420/1654\n#> Totals 11963 1844 0.074600  =1030/13807\n#> \n#> Maximum Metrics: Maximum metrics at their respective thresholds\n#>                         metric threshold        value idx\n#> 1                       max f1  0.336672     0.705546 200\n#> 2                       max f2  0.173934     0.773829 260\n#> 3                 max f0point5  0.606201     0.726455 119\n#> 4                 max accuracy  0.465607     0.930470 159\n#> 5                max precision  0.981631     1.000000   0\n#> 6                   max recall  0.001737     1.000000 396\n#> 7              max specificity  0.981631     1.000000   0\n#> 8             max absolute_mcc  0.336672     0.664265 200\n#> 9   max min_per_class_accuracy  0.121191     0.882498 285\n#> 10 max mean_per_class_accuracy  0.113819     0.884889 289\n#> 11                     max tns  0.981631 12153.000000   0\n#> 12                     max fns  0.981631  1649.000000   0\n#> 13                     max fps  0.000612 12153.000000 399\n#> 14                     max tps  0.001737  1654.000000 396\n#> 15                     max tnr  0.981631     1.000000   0\n#> 16                     max fnr  0.981631     0.996977   0\n#> 17                     max fpr  0.000612     1.000000 399\n#> 18                     max tpr  0.001737     1.000000 396\n#> \n#> Gains/Lift Table: Extract with `h2o.gainsLift(<model>, <data>)` or `h2o.gainsLift(<model>, valid=<T/F>, xval=<T/F>)`\n#> Cross-Validation Metrics Summary: \n#>                 mean        sd cv_1_valid cv_2_valid cv_3_valid cv_4_valid\n#> accuracy    0.928868  0.007200   0.925966   0.919870   0.925993   0.935747\n#> auc         0.947436  0.005531   0.938772   0.951460   0.950667   0.945005\n#> err         0.071132  0.007200   0.074034   0.080131   0.074007   0.064253\n#> err_count 196.400000 19.718012 203.000000 221.000000 205.000000 181.000000\n#> f0point5    0.700417  0.028890   0.701811   0.662437   0.683263   0.736111\n#>           cv_5_valid\n#> accuracy    0.936765\n#> auc         0.951276\n#> err         0.063235\n#> err_count 172.000000\n#> f0point5    0.718466\n#> \n#> ---\n#>                          mean        sd  cv_1_valid  cv_2_valid  cv_3_valid\n#> precision            0.693022  0.040015    0.716172    0.638142    0.663239\n#> r2                   0.468373  0.027896    0.436864    0.457532    0.472092\n#> recall               0.738393  0.054802    0.649701    0.781437    0.777108\n#> residual_deviance 1068.577800 99.574530 1135.221800 1088.680000 1075.436500\n#> rmse                 0.236698  0.009607    0.245437    0.240288    0.235985\n#> specificity          0.954753  0.011494    0.964286    0.938944    0.946267\n#>                    cv_4_valid cv_5_valid\n#> precision            0.730028   0.717532\n#> r2                   0.462766   0.512612\n#> recall               0.761494   0.722222\n#> residual_deviance 1145.036700 898.513700\n#> rmse                 0.241182   0.220596\n#> specificity          0.960308   0.963960\n```\n:::\n\n```{.r .cell-code}\nh2o.init()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  Connection successful!\n#> \n#> R is connected to the H2O cluster: \n#>     H2O cluster uptime:         18 hours 59 minutes \n#>     H2O cluster timezone:       Europe/Berlin \n#>     H2O data parsing timezone:  UTC \n#>     H2O cluster version:        3.40.0.4 \n#>     H2O cluster version age:    1 month and 9 days \n#>     H2O cluster name:           H2O_started_from_R_felixadamaszek_adl455 \n#>     H2O cluster total nodes:    1 \n#>     H2O cluster total memory:   1.61 GB \n#>     H2O cluster total cores:    4 \n#>     H2O cluster allowed cores:  4 \n#>     H2O cluster healthy:        TRUE \n#>     H2O Connection ip:          localhost \n#>     H2O Connection port:        54321 \n#>     H2O Connection proxy:       NA \n#>     H2O Internal Security:      FALSE \n#>     R Version:                  R version 4.2.3 (2023-03-15)\n```\n:::\n\n```{.r .cell-code}\n# h2o.getModel(\"StackedEnsemble_BestOfFamily_2_AutoML_2_20230606_141844\") %>%\n# h2o.saveModel(path = \"/Users/felixadamaszek/Documents/GitHub/ss23-bdml-FelixAdams1827/ss23-bdml-FelixAdams1827/content/01_journal/test\")\n```\n:::\n\n\n# Predicting using leader model\n\n\n\n::: {.cell hash='Challenge_4_cache/html/unnamed-chunk-8_9f2f1242dbce7c07fc29c8301702199f'}\n\n```{.r .cell-code}\nstacked_ensemble_h2o <- h2o.loadModel(\"/Users/felixadamaszek/Documents/GitHub/ss23-bdml-FelixAdams1827/ss23-bdml-FelixAdams1827/content/01_journal/test/StackedEnsemble_BestOfFamily_2_AutoML_2_20230606_141844\")\n\npredictions <- h2o.predict(stacked_ensemble_h2o, newdata = as.h2o(test_data))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n\n```{.r .cell-code}\ntypeof(predictions)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"environment\"\n```\n:::\n\n```{.r .cell-code}\npredictions_tbl <- predictions %>% as_tibble()\n```\n:::\n\n\n# Optional: Preparation for recreating the model and/or tune some values\n\n\n::: {.cell hash='Challenge_4_cache/html/unnamed-chunk-9_f471715b374084d628d96f6363a789b4'}\n\n```{.r .cell-code}\nh2o.init()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  Connection successful!\n#> \n#> R is connected to the H2O cluster: \n#>     H2O cluster uptime:         19 hours 2 minutes \n#>     H2O cluster timezone:       Europe/Berlin \n#>     H2O data parsing timezone:  UTC \n#>     H2O cluster version:        3.40.0.4 \n#>     H2O cluster version age:    1 month and 9 days \n#>     H2O cluster name:           H2O_started_from_R_felixadamaszek_adl455 \n#>     H2O cluster total nodes:    1 \n#>     H2O cluster total memory:   1.61 GB \n#>     H2O cluster total cores:    4 \n#>     H2O cluster allowed cores:  4 \n#>     H2O cluster healthy:        TRUE \n#>     H2O Connection ip:          localhost \n#>     H2O Connection port:        54321 \n#>     H2O Connection proxy:       NA \n#>     H2O Internal Security:      FALSE \n#>     R Version:                  R version 4.2.3 (2023-03-15)\n```\n:::\n\n```{.r .cell-code}\ndeep_learning_h2o <- h2o.loadModel(\"/Users/felixadamaszek/Documents/GitHub/ss23-bdml-FelixAdams1827/ss23-bdml-FelixAdams1827/content/01_journal/test/StackedEnsemble_BestOfFamily_2_AutoML_2_20230606_141844\")\n\n?h2o.deeplearning\n\ndeep_learning_h2o@allparameters\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> $model_id\n#> [1] \"StackedEnsemble_BestOfFamily_2_AutoML_2_20230606_141844\"\n#> \n#> $training_frame\n#> [1] \"AutoML_2_20230606_141844_training_RTMP_sid_b202_5\"\n#> \n#> $base_models\n#> $base_models[[1]]\n#> $base_models[[1]]$`__meta`\n#> $base_models[[1]]$`__meta`$schema_version\n#> [1] 3\n#> \n#> $base_models[[1]]$`__meta`$schema_name\n#> [1] \"KeyV3\"\n#> \n#> $base_models[[1]]$`__meta`$schema_type\n#> [1] \"Key<Keyed>\"\n#> \n#> \n#> $base_models[[1]]$name\n#> [1] \"XGBoost_1_AutoML_2_20230606_141844\"\n#> \n#> $base_models[[1]]$type\n#> [1] \"Key<Keyed>\"\n#> \n#> $base_models[[1]]$URL\n#> NULL\n#> \n#> \n#> $base_models[[2]]\n#> $base_models[[2]]$`__meta`\n#> $base_models[[2]]$`__meta`$schema_version\n#> [1] 3\n#> \n#> $base_models[[2]]$`__meta`$schema_name\n#> [1] \"KeyV3\"\n#> \n#> $base_models[[2]]$`__meta`$schema_type\n#> [1] \"Key<Keyed>\"\n#> \n#> \n#> $base_models[[2]]$name\n#> [1] \"GBM_1_AutoML_2_20230606_141844\"\n#> \n#> $base_models[[2]]$type\n#> [1] \"Key<Keyed>\"\n#> \n#> $base_models[[2]]$URL\n#> NULL\n#> \n#> \n#> $base_models[[3]]\n#> $base_models[[3]]$`__meta`\n#> $base_models[[3]]$`__meta`$schema_version\n#> [1] 3\n#> \n#> $base_models[[3]]$`__meta`$schema_name\n#> [1] \"KeyV3\"\n#> \n#> $base_models[[3]]$`__meta`$schema_type\n#> [1] \"Key<Keyed>\"\n#> \n#> \n#> $base_models[[3]]$name\n#> [1] \"DRF_1_AutoML_2_20230606_141844\"\n#> \n#> $base_models[[3]]$type\n#> [1] \"Key<Keyed>\"\n#> \n#> $base_models[[3]]$URL\n#> NULL\n#> \n#> \n#> $base_models[[4]]\n#> $base_models[[4]]$`__meta`\n#> $base_models[[4]]$`__meta`$schema_version\n#> [1] 3\n#> \n#> $base_models[[4]]$`__meta`$schema_name\n#> [1] \"KeyV3\"\n#> \n#> $base_models[[4]]$`__meta`$schema_type\n#> [1] \"Key<Keyed>\"\n#> \n#> \n#> $base_models[[4]]$name\n#> [1] \"GLM_1_AutoML_2_20230606_141844\"\n#> \n#> $base_models[[4]]$type\n#> [1] \"Key<Keyed>\"\n#> \n#> $base_models[[4]]$URL\n#> NULL\n#> \n#> \n#> \n#> $metalearner_algorithm\n#> [1] \"glm\"\n#> \n#> $metalearner_nfolds\n#> [1] 5\n#> \n#> $metalearner_params\n#> [1] \"\"\n#> \n#> $metalearner_transform\n#> [1] \"Logit\"\n#> \n#> $max_runtime_secs\n#> [1] 0.4566667\n#> \n#> $seed\n#> [1] \"5766883882285979032\"\n#> \n#> $score_training_samples\n#> [1] 10000\n#> \n#> $keep_levelone_frame\n#> [1] TRUE\n#> \n#> $auc_type\n#> [1] \"AUTO\"\n#> \n#> $x\n#>  [1] \"sku\"                 \"national_inv\"        \"lead_time\"          \n#>  [4] \"in_transit_qty\"      \"forecast_3_month\"    \"forecast_6_month\"   \n#>  [7] \"forecast_9_month\"    \"sales_1_month\"       \"sales_3_month\"      \n#> [10] \"sales_6_month\"       \"sales_9_month\"       \"min_bank\"           \n#> [13] \"pieces_past_due\"     \"perf_6_month_avg\"    \"perf_12_month_avg\"  \n#> [16] \"local_bo_qty\"        \"potential_issue_Yes\" \"deck_risk_Yes\"      \n#> [19] \"oe_constraint_Yes\"   \"ppap_risk_Yes\"       \"stop_auto_buy_Yes\"  \n#> [22] \"rev_stop_Yes\"       \n#> \n#> $y\n#> [1] \"went_on_backorder\"\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}