{
  "hash": "bffb6422d1e316e829bf44a3c7adf5af",
  "result": {
    "markdown": "---\ntitle: \"Tidyverse challenge\"\nauthor: \"**Felix Adamaszek**, *Matr. Nr. 52505*\"\n---\n\n\n\n# Bilder der erzeugten Ergebnisse der beiden Challenges\n\n## Revenue by state\n\n![Plot 1: Revenue by State](../../content/01_journal/01_tidyverse_files/figure-html/plot-1.png)\n\n## Revenue by state and year\n\n![Plot 2: Revenue by state and year](../../content/01_journal/01_tidyverse_files/figure-html/plot-2.png)\n\n# Source Code\n\n\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-1_0fbd5b116b9c6497cd057b8f7431401f'}\n\n```{.r .cell-code}\n# Intro to the tidyverse Challenge\n\n# 1.0 Load libraries ----\n\n          library(tidyverse)\n          library(readxl)\n\n# 2.0 Importing needed files ----\n\n          bikes_tbl      <- read_excel(path = \"/Users/felixadamaszek/Documents/GitHub/ss23-bdsb-FelixAdams1827/Eigener Ordner/Intro to the tidyverse/Business Case/01_bike_sales/01_raw_data/bikes.xlsx\")\n          orderlines_tbl <- read_excel(\"/Users/felixadamaszek/Documents/GitHub/ss23-bdsb-FelixAdams1827/Eigener Ordner/Intro to the tidyverse/Business Case/01_bike_sales/01_raw_data/orderlines.xlsx\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\n          bikeshops_tbl  <- read_excel(\"/Users/felixadamaszek/Documents/GitHub/ss23-bdsb-FelixAdams1827/Eigener Ordner/Intro to the tidyverse/Business Case/01_bike_sales/01_raw_data/bikeshops.xlsx\")\n\n# 3.0 Joining Data ----\n\n          bike_orderlines_joined_tbl <- orderlines_tbl %>%\n          left_join(bikes_tbl, by = c(\"product.id\" = \"bike.id\")) %>%\n          left_join(bikeshops_tbl, by = c(\"customer.id\" = \"bikeshop.id\"))\n\n# 4.0 Wrangling Data ----\n\n          bike_orderlines_wrangled_tbl <- bike_orderlines_joined_tbl %>%\n  \n  # 4.1 Separate column location ----\n\n          separate(col    = location,\n          into   = c(\"city\", \"state\"),\n          sep    = \", \") %>%\n  \n  # 4.2 Add the total price (price * quantity) \n\n          mutate(total.price = price * quantity) %>%\n  \n  # 4.3 Rename columns \n  \n          rename(bikeshop = name) %>%\n          set_names(names(.) %>% str_replace_all(\"\\\\.\", \"_\"))\n\n# 5.0 Business Insights ----\n  # 5.1 Sales by location (state) ----\n    # Which state has the highest revenue?\n\n    # Step 5.1.1 - Manipulating the data\n\n        library(lubridate)\n        sales_by_state_tbl <- bike_orderlines_wrangled_tbl %>%\n  \n    # Select needed columns\n        select(state, total_price) %>%\n  \n    # Grouping by state and summarizing the sales\n        group_by(state) %>% \n        summarize(sales = sum(total_price)) %>%\n        \n    # Adding a column that turns the numbers into a currency format\n        mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\n        sales_by_state_tbl\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 3\n   state                            sales sales_text  \n   <chr>                            <dbl> <chr>       \n 1 Baden-Württemberg              6521090 6.521.090 € \n 2 Bavaria                        6742819 6.742.819 € \n 3 Berlin                         1128433 1.128.433 € \n 4 Bremen                        10653499 10.653.499 €\n 5 Hamburg                        3874756 3.874.756 € \n 6 Hesse                          1558901 1.558.901 € \n 7 Lower Saxony                   4107115 4.107.115 € \n 8 Mecklenburg-Western Pomerania   618974 618.974 €   \n 9 North Rhine-Westphalia        21200613 21.200.613 €\n10 Saxony                         2230245 2.230.245 € \n11 Saxony-Anhalt                   569614 569.614 €   \n12 Schleswig-Holstein             3224749 3.224.749 € \n```\n:::\n\n```{.r .cell-code}\n    # 5.2 Sales by State and Year ----\n\n      # Step 5.2.1 - Manipulating the data\n\n          sales_by_state_year_tbl <- bike_orderlines_wrangled_tbl %>%\n  \n      # Select columns and add the column year\n          select(order_date, total_price, state) %>%\n          mutate(year = year(order_date)) %>%\n  \n      # Group by and summarize year and state\n          group_by(year, state) %>%\n          summarise(sales = sum(total_price)) %>%\n          ungroup() %>%\n  \n      # Format\n          mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\n        sales_by_state_year_tbl\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 60 × 4\n    year state                           sales sales_text \n   <dbl> <chr>                           <dbl> <chr>      \n 1  2015 Baden-Württemberg             1031924 1.031.924 €\n 2  2015 Bavaria                       1301461 1.301.461 €\n 3  2015 Berlin                          95853 95.853 €   \n 4  2015 Bremen                        1395912 1.395.912 €\n 5  2015 Hamburg                        423090 423.090 €  \n 6  2015 Hesse                          308609 308.609 €  \n 7  2015 Lower Saxony                   584386 584.386 €  \n 8  2015 Mecklenburg-Western Pomerania  222003 222.003 €  \n 9  2015 North Rhine-Westphalia        3735092 3.735.092 €\n10  2015 Saxony                         238371 238.371 €  \n# ℹ 50 more rows\n```\n:::\n:::\n\n::: {.cell hash='01_tidyverse_cache/html/plot_1cfc7251c3519b2a930cc6ae54952e78'}\n\n```{.r .cell-code}\n        # Step 5.1.2 - Visualize the data\n        sales_by_state_tbl %>%\n          \n          # Setup canvas with the columns year (x-axis) and sales (y-axis)\n          ggplot(aes(x = state, y = sales)) +\n          \n          \n          # Geometries\n          geom_col(fill = \"#2DC6D6\") + \n          geom_label(aes(label = sales_text)) +\n          \n          # Hint\n          theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n          theme(axis.text.y = element_text(angle = 45, hjust = 1)) +\n          \n          # Formatting\n          scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                            decimal.mark = \",\", \n                                                            prefix = \"\", \n                                                            suffix = \" €\")) +\n          labs(\n            title    = \"Revenue by state\",\n            x = \"States\",\n            y = \"Revenue\"\n          )\n```\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/plot-1.png){width=1248}\n:::\n\n```{.r .cell-code}\n        # Step 5.2.2 - Visualize the data\n          sales_by_state_year_tbl %>%\n  \n        # Set up x, y, fill\n          ggplot(aes(x = year, y = sales, fill = state)) +\n  \n        # Geometries\n          geom_col() + \n  \n        # Facet\n          facet_wrap(~ state) +\n  \n        # Formatting\n          scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n          labs(\n                title = \"Revenue by state and year\",\n                fill = \"States\"\n              )\n```\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/plot-2.png){width=1248}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}